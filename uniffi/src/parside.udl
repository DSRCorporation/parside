[Error]
enum ParsideError {
    "PayloadDeserializeError",
    "StreamDeserializationError",
    "EmptyBytesStream",
    "NotExist",
    "Unexpected",
    "Common",
};

dictionary Verfer {
  sequence<u8> raw;
  string code;
  u32 size;
};

dictionary Prefixer {
  sequence<u8> raw;
  string code;
  u32 size;
};

dictionary Dater {
  sequence<u8> raw;
  string code;
  u32 size;
};

dictionary Seqner {
  sequence<u8> raw;
  string code;
  u32 size;
};

dictionary Diger {
  sequence<u8> raw;
  string code;
  u32 size;
};

dictionary Saider {
  sequence<u8> raw;
  string code;
  u32 size;
};

dictionary Cigar {
  sequence<u8> raw;
  string code;
  u32 size;
  Verfer verfer;
};

dictionary Signer {
  sequence<u8> raw;
  string code;
  u32 size;
  Verfer verfer;
};

dictionary Siger {
  sequence<u8> raw;
  string code;
  u32 index;
  u32 ondex;
  Verfer verfer;
};

dictionary AttachedMaterialQuadlets {
  sequence<CesrGroup> value;
};

dictionary ControllerIdxSig {
  Siger siger;
};

dictionary ControllerIdxSigs {
  sequence<ControllerIdxSig> value;
};

dictionary FirstSeenReplayCouple {
  Seqner firner;
  Dater dater;
};

dictionary FirstSeenReplayCouples {
  sequence<FirstSeenReplayCouple> value;
};

dictionary NonTransReceiptCouple {
  Cigar cigar;
};

dictionary PathedMaterialQuadlet {
  Siger siger;
};

dictionary PathedMaterialQuadlets {
  sequence<PathedMaterialQuadlet> value;
};

dictionary SadPathSig {
  Siger siger;
};

dictionary SadPathSigs {
  sequence<SadPathSig> value;
};

dictionary SadPathSigGroup {
  Siger siger;
};

dictionary SadPathSigGroups {
  sequence<SadPathSigGroup> value;
};

dictionary NonTransReceiptCouple {
  Cigar cigar;
};

dictionary NonTransReceiptCouples {
  sequence<NonTransReceiptCouple> value;
};

dictionary SealSourceCouple {
  Seqner seqner;
  Saider saider;
};

dictionary SealSourceCouples {
  sequence<SealSourceCouple> value;
};

dictionary TransIdxSigGroup {
  Prefixer prefixer;
  Seqner seqner;
  Saider saider;
  ControllerIdxSigs isigers;
};

dictionary TransIdxSigGroups {
  sequence<TransIdxSigGroup> value;
};

dictionary TransLastIdxSigGroup {
  Prefixer prefixer;
  ControllerIdxSigs isigers;
};

dictionary TransLastIdxSigGroups {
  sequence<TransLastIdxSigGroup> value;
};

dictionary TransReceiptQuadruple {
  Prefixer prefixer;
  Seqner seqner;
  Saider saider;
  Siger siger;
};

dictionary TransReceiptQuadruples {
  sequence<TransReceiptQuadruple> value;
};

dictionary WitnessIdxSig {
  Siger siger;
};

dictionary WitnessIdxSigs {
  sequence<WitnessIdxSig> value;
};

[Custom]
typedef string JsonValue;

dictionary CustomPayload {
  JsonValue value;
};

dictionary CesrGroup {
    AttachedMaterialQuadlets? attached_material_quadlets;
    ControllerIdxSigs? controller_idx_sigs;
    FirstSeenReplayCouples? first_seen_replay_couples;
    NonTransReceiptCouples? non_trans_receipt_couples;
    PathedMaterialQuadlets? pathed_material_quadlets;
    SadPathSigs? sad_path_sigs;
    SadPathSigGroups? sad_path_sig_groups;
    SealSourceCouples? seal_source_couples;
    TransIdxSigGroups? trans_idx_sig_groups;
    TransLastIdxSigGroups? trans_last_idx_sig_groups;
    TransReceiptQuadruples? trans_receipt_quadruples;
    WitnessIdxSigs? witness_idx_sigs;
};


dictionary Message {
    CustomPayload? payload;
    CesrGroup? group;
};

dictionary MessageList {
  sequence<Message> messages;
};

dictionary MessageFromStreamResult {
  sequence<u8> rest;
  Message message;
};

dictionary MessageListFromStreamResult {
  sequence<u8> rest;
  sequence<Message> messages;
};

namespace parside {
    [Throws=ParsideError]
    Dater dater_new_with_code_and_raw([ByRef] string code, [ByRef] sequence<u8> raw);
    [Throws=ParsideError]
    Dater dater_new_with_qb64([ByRef] string qb64);
    [Throws=ParsideError]
    Dater dater_new_with_qb64b([ByRef] sequence<u8> qb64b);
    [Throws=ParsideError]
    Dater dater_new_with_qb2([ByRef] sequence<u8> qb2);
    string dater_code([ByRef] Dater dater);
    u32 dater_size([ByRef] Dater dater);
    sequence<u8> dater_raw([ByRef] Dater dater);
    [Throws=ParsideError]
    string dater_qb64([ByRef] Dater dater);
    [Throws=ParsideError]
    sequence<u8> dater_qb64b([ByRef] Dater dater);
    [Throws=ParsideError]
    sequence<u8> dater_qb2([ByRef] Dater dater);

    [Throws=ParsideError]
    Seqner seqner_new_with_code_and_raw([ByRef] string code, [ByRef] sequence<u8> raw);
    [Throws=ParsideError]
    Seqner seqner_new_with_qb64([ByRef] string qb64);
    [Throws=ParsideError]
    Seqner seqner_new_with_qb64b([ByRef] sequence<u8> qb64b);
    [Throws=ParsideError]
    Seqner seqner_new_with_qb2([ByRef] sequence<u8> qb2);
    string seqner_code([ByRef] Seqner seqner);
    u32 seqner_size([ByRef] Seqner seqner);
    sequence<u8> seqner_raw([ByRef] Seqner seqner);
    [Throws=ParsideError]
    string seqner_qb64([ByRef] Seqner seqner);
    [Throws=ParsideError]
    sequence<u8> seqner_qb64b([ByRef] Seqner seqner);
    [Throws=ParsideError]
    sequence<u8> seqner_qb2([ByRef] Seqner seqner);

    [Throws=ParsideError]
    Diger diger_new_with_code_and_raw([ByRef] string code, [ByRef] sequence<u8> raw);
    [Throws=ParsideError]
    Diger diger_new_with_qb64([ByRef] string qb64);
    [Throws=ParsideError]
    Diger diger_new_with_qb64b([ByRef] sequence<u8> qb64b);
    [Throws=ParsideError]
    Diger diger_new_with_qb2([ByRef] sequence<u8> qb2);
    string diger_code([ByRef] Diger diger);
    u32 diger_size([ByRef] Diger diger);
    sequence<u8> diger_raw([ByRef] Diger diger);
    [Throws=ParsideError]
    string diger_qb64([ByRef] Diger diger);
    [Throws=ParsideError]
    sequence<u8> diger_qb64b([ByRef] Diger diger);
    [Throws=ParsideError]
    sequence<u8> diger_qb2([ByRef] Diger diger);

    [Throws=ParsideError]
    Saider saider_new_with_qb64([ByRef] string qb64);
    [Throws=ParsideError]
    Saider saider_new_with_qb64b([ByRef] sequence<u8> qb64b);
    [Throws=ParsideError]
    Saider saider_new_with_qb2([ByRef] sequence<u8> qb2);
    string saider_code([ByRef] Saider saider);
    u32 saider_size([ByRef] Saider saider);
    sequence<u8> saider_raw([ByRef] Saider saider);
    [Throws=ParsideError]
    string saider_qb64([ByRef] Saider saider);
    [Throws=ParsideError]
    sequence<u8> saider_qb64b([ByRef] Saider saider);
    [Throws=ParsideError]
    sequence<u8> saider_qb2([ByRef] Saider saider);

    [Throws=ParsideError]
    Cigar cigar_new_with_code_and_raw([ByRef] Verfer verfer, [ByRef] string code, [ByRef] sequence<u8> raw);
    [Throws=ParsideError]
    Cigar cigar_new_with_qb64([ByRef] Verfer verfer, [ByRef] string qb64);
    [Throws=ParsideError]
    Cigar cigar_new_with_qb64b([ByRef] Verfer verfer, [ByRef] sequence<u8> qb64b);
    [Throws=ParsideError]
    Cigar cigar_new_with_qb2([ByRef] Verfer verfer, [ByRef] sequence<u8> qb2);
    string cigar_code([ByRef] Cigar cigar);
    u32 cigar_size([ByRef] Cigar cigar);
    sequence<u8> cigar_raw([ByRef] Cigar cigar);
    [Throws=ParsideError]
    string cigar_qb64([ByRef] Cigar cigar);
    [Throws=ParsideError]
    sequence<u8> cigar_qb64b([ByRef] Cigar cigar);
    [Throws=ParsideError]
    sequence<u8> cigar_qb2([ByRef] Cigar cigar);

    [Throws=ParsideError]
    Signer signer_new_with_code_and_raw([ByRef] string code, [ByRef] sequence<u8> raw, boolean transferable);
    [Throws=ParsideError]
    Signer signer_new_with_qb64([ByRef] string qb64, boolean transferable);
    [Throws=ParsideError]
    Signer signer_new_with_qb64b([ByRef] sequence<u8> qb64b, boolean transferable);
    [Throws=ParsideError]
    Signer signer_new_with_qb2([ByRef] sequence<u8> qb2, boolean transferable);
    string signer_code([ByRef] Signer signer);
    u32 signer_size([ByRef] Signer signer);
    sequence<u8> signer_raw([ByRef] Signer signer);
    [Throws=ParsideError]
    string signer_qb64([ByRef] Signer signer);
    [Throws=ParsideError]
    sequence<u8> signer_qb64b([ByRef] Signer signer);
    [Throws=ParsideError]
    sequence<u8> signer_qb2([ByRef] Signer signer);

    [Throws=ParsideError]
    Siger siger_new_with_code_and_raw([ByRef] string code, [ByRef] sequence<u8> raw, u32 index, u32? ondex);
    [Throws=ParsideError]
    Siger siger_new_with_qb64([ByRef] string qb64);
    [Throws=ParsideError]
    Siger siger_new_with_qb64b([ByRef] sequence<u8> qb64b);
    [Throws=ParsideError]
    Siger siger_new_with_qb2([ByRef] sequence<u8> qb2);
    string siger_code([ByRef] Siger siger);
    sequence<u8> siger_raw([ByRef] Siger siger);
    [Throws=ParsideError]
    string siger_qb64([ByRef] Siger siger);
    [Throws=ParsideError]
    sequence<u8> siger_qb64b([ByRef] Siger siger);
    [Throws=ParsideError]
    sequence<u8> siger_qb2([ByRef] Siger siger);

    [Throws=ParsideError]
    MessageFromStreamResult message_from_stream_bytes([ByRef] sequence<u8> bytes);

    [Throws=ParsideError]
    MessageListFromStreamResult message_list_from_stream_bytes([ByRef] sequence<u8> bytes);

    AttachedMaterialQuadlets attached_material_quadlets_create(sequence<CesrGroup> value);
    [Throws=ParsideError]
    string attached_material_quadlets_qb64([ByRef] AttachedMaterialQuadlets attached_material_quadlets);
    [Throws=ParsideError]
    sequence<u8> attached_material_quadlets_qb64b([ByRef] AttachedMaterialQuadlets attached_material_quadlets);
    [Throws=ParsideError]
    sequence<u8> attached_material_quadlets_qb2([ByRef] AttachedMaterialQuadlets attached_material_quadlets);

    ControllerIdxSig controller_idx_sig_create(Siger siger);
    ControllerIdxSigs controller_idx_sigs_create(sequence<ControllerIdxSig> value);
    [Throws=ParsideError]
    string controller_idx_sigs_qb64([ByRef] ControllerIdxSigs controller_idx_sigs);
    [Throws=ParsideError]
    sequence<u8> controller_idx_sigs_qb64b([ByRef] ControllerIdxSigs controller_idx_sigs);
    [Throws=ParsideError]
    sequence<u8> controller_idx_sigs_qb2([ByRef] ControllerIdxSigs controller_idx_sigs);

    FirstSeenReplayCouple first_seen_replay_couple_create(Seqner firner, Dater dater);
    FirstSeenReplayCouples first_seen_replay_couples_create(sequence<FirstSeenReplayCouple> value);
    [Throws=ParsideError]
    string first_seen_replay_couples_qb64([ByRef] FirstSeenReplayCouples first_seen_replay_couples);
    [Throws=ParsideError]
    sequence<u8> first_seen_replay_couples_qb64b([ByRef] FirstSeenReplayCouples first_seen_replay_couples);
    [Throws=ParsideError]
    sequence<u8> first_seen_replay_couples_qb2([ByRef] FirstSeenReplayCouples first_seen_replay_couples);

    NonTransReceiptCouple non_trans_receipt_couple_create(Cigar cigar);
    NonTransReceiptCouples non_trans_receipt_couples_create(sequence<NonTransReceiptCouple> value);
    [Throws=ParsideError]
    string non_trans_receipt_couples_qb64([ByRef] NonTransReceiptCouples non_trans_receipt_couples);
    [Throws=ParsideError]
    sequence<u8> non_trans_receipt_couples_qb64b([ByRef] NonTransReceiptCouples non_trans_receipt_couples);
    [Throws=ParsideError]
    sequence<u8> non_trans_receipt_couples_qb2([ByRef] NonTransReceiptCouples non_trans_receipt_couples);

    PathedMaterialQuadlet pathed_material_quadlet_create(Siger siger);
    PathedMaterialQuadlets pathed_material_quadlets_create(sequence<PathedMaterialQuadlet> value);
    [Throws=ParsideError]
    string pathed_material_quadlets_qb64([ByRef] PathedMaterialQuadlets pathed_material_quadlets);
    [Throws=ParsideError]
    sequence<u8> pathed_material_quadlets_qb64b([ByRef] PathedMaterialQuadlets pathed_material_quadlets);
    [Throws=ParsideError]
    sequence<u8> pathed_material_quadlets_qb2([ByRef] PathedMaterialQuadlets pathed_material_quadlets);

    SadPathSig sad_path_sig_create(Siger siger);
    SadPathSigs sad_path_sigs_create(sequence<SadPathSig> value);
    [Throws=ParsideError]
    string sad_path_sigs_qb64([ByRef] SadPathSigs sad_path_sigs);
    [Throws=ParsideError]
    sequence<u8> sad_path_sigs_qb64b([ByRef] SadPathSigs sad_path_sigs);
    [Throws=ParsideError]
    sequence<u8> sad_path_sigs_qb2([ByRef] SadPathSigs sad_path_sigs);

    SadPathSigGroup sad_path_sig_group_create(Siger siger);
    SadPathSigGroups sad_path_sig_groups_create(sequence<SadPathSigGroup> value);
    [Throws=ParsideError]
    string sad_path_sig_groups_qb64([ByRef] SadPathSigGroups sad_path_sig_group);
    [Throws=ParsideError]
    sequence<u8> sad_path_sig_groups_qb64b([ByRef] SadPathSigGroups sad_path_sig_group);
    [Throws=ParsideError]
    sequence<u8> sad_path_sig_groups_qb2([ByRef] SadPathSigGroups sad_path_sig_group);

    SealSourceCouple seal_source_couple_create(Seqner seqner, Saider saider);
    SealSourceCouples seal_source_couples_create(sequence<SealSourceCouple> value);
    [Throws=ParsideError]
    string seal_source_couples_qb64([ByRef] SealSourceCouples seal_source_couples);
    [Throws=ParsideError]
    sequence<u8> seal_source_couples_qb64b([ByRef] SealSourceCouples seal_source_couples);
    [Throws=ParsideError]
    sequence<u8> seal_source_couples_qb2([ByRef] SealSourceCouples seal_source_couples);

    TransIdxSigGroup trans_idx_sig_group_create(Prefixer prefixer, Seqner seqner, Saider saider, ControllerIdxSigs isigers);
    TransIdxSigGroups trans_idx_sig_groups_create(sequence<TransIdxSigGroup> value);
    [Throws=ParsideError]
    string trans_idx_sig_groups_qb64([ByRef] TransIdxSigGroups trans_idx_sig_groups);
    [Throws=ParsideError]
    sequence<u8> trans_idx_sig_groups_qb64b([ByRef] TransIdxSigGroups trans_idx_sig_groups);
    [Throws=ParsideError]
    sequence<u8> trans_idx_sig_groups_qb2([ByRef] TransIdxSigGroups trans_idx_sig_groups);

    TransLastIdxSigGroup trans_last_idx_sig_group_create(Prefixer prefixer, ControllerIdxSigs isigers);
    TransLastIdxSigGroups trans_last_idx_sig_groups_create(sequence<TransLastIdxSigGroup> value);
    [Throws=ParsideError]
    string trans_last_idx_sig_groups_qb64([ByRef] TransLastIdxSigGroups trans_last_idx_sig_groups);
    [Throws=ParsideError]
    sequence<u8> trans_last_idx_sig_groups_qb64b([ByRef] TransLastIdxSigGroups trans_last_idx_sig_groups);
    [Throws=ParsideError]
    sequence<u8> trans_last_idx_sig_groups_qb2([ByRef] TransLastIdxSigGroups trans_last_idx_sig_groups);

    TransReceiptQuadruple trans_receipt_quadruple_create(Prefixer prefixer, Seqner seqner, Saider saider, Siger siger);
    TransReceiptQuadruples trans_receipt_quadruples_create(sequence<TransReceiptQuadruple> value);
    [Throws=ParsideError]
    string trans_receipt_quadruples_qb64([ByRef] TransReceiptQuadruples trans_receipt_quadruples);
    [Throws=ParsideError]
    sequence<u8> trans_receipt_quadruples_qb64b([ByRef] TransReceiptQuadruples trans_receipt_quadruples);
    [Throws=ParsideError]
    sequence<u8> trans_receipt_quadruples_qb2([ByRef] TransReceiptQuadruples trans_receipt_quadruples);

    WitnessIdxSig witness_ids_sig_create(Siger siger);
    WitnessIdxSigs witness_ids_sigs_create(sequence<WitnessIdxSig> value);
    [Throws=ParsideError]
    string witness_ids_sigs_qb64([ByRef] WitnessIdxSigs witness_ids_sigs);
    [Throws=ParsideError]
    sequence<u8> witness_ids_sigs_qb64b([ByRef] WitnessIdxSigs witness_ids_sigs);
    [Throws=ParsideError]
    sequence<u8> witness_ids_sigs_qb2([ByRef] WitnessIdxSigs witness_ids_sigs);
};
